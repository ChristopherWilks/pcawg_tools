<tool id="delly" name="delly" version="">
	<description>structural variant prediction method</description>
	<parallelism method="basic"></parallelism>
	<requirements>
		<container type="docker">delly</container>
	</requirements>
	<command interpreter="python">
		delly.py
		-b $bam
		-t
		#if $checkDel:
			DEL
		#end if
		#if $checkDup:
			DUP
		#end if
		#if $checkInv:
			INV
		#end if
		#if $checkTra:
			TRA
		#end if
		-q $map_qual
		-s $mad_cutoff
		-g $genome
		-m $min_flank
		-e $epsilon
		-o $output
		--procs 4
	</command>

	<inputs>
		<param format="bam" name="bam" type="data" label="bam file" help="" />
		<param name="checkDel" type="boolean" label="Check Deletion?" checked="true"/>
		<param name="checkDup" type="boolean" label="Check Duplication?" checked="true"/>
		<param name="checkInv" type="boolean" label="Check Inversion?" checked="true"/>
		<param name="checkTra" type="boolean" label="Check Translation?" checked="true"/>
		<param name="map_qual" type="integer" label="min. paired-end mapping quality" value="0" />
		<param name="mad_cutoff" type="integer" label="insert size cutoff, median+s*MAD (deletions only)" value="5" />
		<param name="min_flank" type="integer" label="minimum flanking sequence size" value="13" />
		<param name="epsilon" type="float" label="allowed epsilon deviation of PE vs. SR deletion" value="0.1" />
		<param name="genome" type="data" format="fasta"  label="Reference Genome" optional="true"/>
	</inputs>

	<outputs>
		<data format="vcf" name="output" label="VCF output of delly" />
	</outputs>

	<help>
DELLY is an integrated structural variant prediction method that can detect deletions, tandem duplications, inversions and translocations at single-nucleotide resolution in short-read massively parallel sequencing data.
It uses paired-ends and split-reads to sensitively and accurately delineate genomic rearrangements throughout the genome.

DELLY (Version: 0.5.5)
Contact: Tobias Rausch (rausch@embl.de)

Generic options:
  -? [ --help ]                    show help message
  -t [ --type ] arg (=DEL)         SV analysis type (DEL, DUP, INV, TRA)
  -o [ --outfile ] arg (="sv.vcf") SV output file
  -x [ --exclude ] arg (="")       file with chr to exclude

PE options:
  -q [ --map-qual ] arg (=0)   min. paired-end mapping quality
  -s [ --mad-cutoff ] arg (=5) insert size cutoff, median+s*MAD (deletions only)

SR options:
  -g [ --genome ] arg          genome fasta file
  -m [ --min-flank ] arg (=13) minimum flanking sequence size

Genotyping options:
  -v [ --vcfgeno ] arg (="site.vcf") input vcf file for genotyping only
  -u [ --geno-qual ] arg (=20)       min. mapping quality for genotyping
	</help>

	<tests>
		<test>
		</test>
	</tests>

</tool>
